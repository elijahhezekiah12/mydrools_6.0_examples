/*
 * Copyright 2010 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.tutorials.banking


/*
  Note: There are certainly many better ways to sort numbers than using rules, 
  but since we will need to apply some cashflows in date order when we start 
  looking at banking rules we'll develop simple rule based sorting technique.
*/ 
 
 
 /*
 Drools Sorting Routine:
 The first line of the rule identifies a Number and extracts the value. 
 The second line ensures that there does not exist a smaller number than the one found by the 
 first pattern. We might expect to match only one number - the smallest in the set. 
 However, the retraction of the number after it has been printed means that the 
 smallest number has been *removed*, revealing the next smallest number, and so on.

 The resulting output shows that the numbers are now sorted numerically.
*/ 

rule "Rule 01"   
    when
        $number : Number( )
        not Number( intValue < $number.intValue )
    then
        System.out.println("Number found with value: " + $number.intValue() ); 
        retract( $number );
end 




